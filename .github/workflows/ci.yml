name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: "1.17.0"
  RUST_TOOLCHAIN: stable

jobs:
  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt, clippy
          
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        
      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          
      - name: Run format check
        run: cargo fmt --all -- --check
        
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        
      - name: Run tests
        run: cargo test --all --verbose

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          
      - name: Install cargo-audit
        run: cargo install cargo-audit
        
      - name: Run security audit
        run: cargo audit

  ai-validation-checks:
    name: AI Model Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install AI testing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest torch torchvision onnx onnxruntime
          
      - name: Run AI model validation tests
        run: |
          cd tests/ai_validation
          pytest -v

  build:
    name: Build
    needs: [rust-checks, security-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          
      - name: Build
        run: cargo build --verbose
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vetras-build
          path: target/debug/vetras_core

  integration-tests:
    name: Integration Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: vetras-build
          
      - name: Run integration tests
        run: |
          chmod +x vetras_core
          ./scripts/run_integration_tests.sh

  deploy-preview:
    name: Deploy Preview Environment
    if: github.event_name == 'pull_request'
    needs: [build, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Deploy to preview
        run: |
          ./scripts/deploy_preview.sh